"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import environ
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
environ.Env.read_env()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-75tsn+#n4ti)e6kl2_dml#zs0(iyc$njfys#x3ql1_#@5k6a_e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

LOGIN_URL = '/accounts/login/'
# Application definition
IMPORT_EXPORT_USE_TRANSACTIONS = True
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     #third-party
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_framework',
     'django.contrib.humanize',
     'widget_tweaks',
      'import_export',
     #local
     'users',
     'search',
     'services',
     'property',
     'notifications',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
        'utils.authentication_middleware.LoginRequiredMiddleware',

]

ROOT_URLCONF = 'core.urls'
SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
          "DIRS": [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME":env("POSTGRES_DB"),
        "USER": env("POSTGRES_USER"),
        "PASSWORD": env("POSTGRES_PASSWORD"),
        "HOST": env("POSTGRES_HOST"),
        "PORT": env("POSTGRES_PORT"),
    }
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

#MEDIA SETTINGS
STATIC_URL = "/static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",

]
STATIC_ROOT = BASE_DIR / 'staticfiles'
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

#ACCOUNT SETTINGS
LOGIN_NOT_REQUIRED_URLS = [
    r'^accounts/(.*)$',
    r'^admin/(.*)$',
    r'^documents/(.*)$',
      r'^static/(.*)$',
      r'^staticfiles/(.*)$',
    
]

ALLOWED_TENANT_AREA = [
    r'^tenant_dashboard/(.*)$',
    r'^maintenance/(.*)$',
    r'^media/(.*)$',
    r'^chat/(.*)$',
    r'^notifications/(.*)$',
    r'^accounts/(.*)$',
    # r'^finance/finance_history/(.*)$',
    r'^paybill/(.*)$',
]
ALLOWED_EMPLOYEE_AREA = [
    r'^paybill/(.*)$',
    r'^select/(.*)$',
    r'^services/(.*)$',
    r'^media/(.*)$',
    r'^property/(.*)$',
    r'^property-rud/(.*)$',
    r'^property-listcreate/(.*)$',
    r'^tenants/(.*)$',
    r'^notifications/(.*)$',
    r'^import_property/(.*)$',

    

#     r'^finance/(.*)$',
# r'^accounts/(.*)$',
    # r'^finance/expenses/(.*)$',
    # r'^finance/expense-listcreate/(.*)$',
    # r'^finance/expense-rud/(.*)$',
    # r'^finance/payments/(.*)$',

    # r'^finance/payee/(.*)$',
    # r'^finance/payee-listcreate/(.*)$',
    # r'^finance/payee-rud/(.*)$',
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ACCOUNT_USER_MODEL_USERNAME_FIELD = 'username'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_VERIFICATION = "none"

# ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_EMAIL_SUBJECT_PREFIX = "Property Management"
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 10
# ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
LOGIN_REDIRECT_URL = "/property/"

ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'
ACCOUNT_SESSION_REMEMBER = True

ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_EMAIL_SUBJECT_PREFIX = "[Landlord message]"
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = False
ACCOUNT_ADAPTER = 'users.adapter.AccountAdapter'
ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}


AUTH_USER_MODEL = 'users.User'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
